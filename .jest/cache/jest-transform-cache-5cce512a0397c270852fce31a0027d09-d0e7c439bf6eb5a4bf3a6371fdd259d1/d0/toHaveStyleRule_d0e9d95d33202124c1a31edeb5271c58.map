{"version":3,"sources":["toHaveStyleRule.js"],"names":["require","getCSS","matcherTest","buildReturnMessage","shouldDive","node","dive","type","isTagWithClassName","exists","prop","getClassNames","received","className","$$typeof","Symbol","for","props","class","tree","components","findWhere","length","first","global","Element","Array","from","classList","join","split","hasAtRule","options","Object","keys","some","option","includes","getAtRules","ast","mediaRegex","map","stylesheet","rules","filter","rule","replace","reduce","acc","concat","getModifiedClassName","modifier","classNameSelector","prefix","trim","hasClassNames","classNames","selectors","getRules","handleMissingRules","pass","message","JSON","stringify","getDeclaration","property","declarations","declaration","pop","getDeclarations","Boolean","normalizeOptions","isArray","toHaveStyleRule","component","expected","normalizedOptions","value","isNot","utils","module","exports"],"mappings":"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","sourcesContent":["const { getCSS, matcherTest, buildReturnMessage } = require('./utils');\n\nconst shouldDive = node => typeof node.dive === 'function' && typeof node.type() !== 'string';\n\nconst isTagWithClassName = node => node.exists() && node.prop('className') && typeof node.type() === 'string';\n\nconst getClassNames = received => {\n  let className;\n\n  if (received) {\n    if (received.$$typeof === Symbol.for('react.test.json')) {\n      className = received.props.className || received.props.class;\n    } else if (typeof received.exists === 'function' && received.exists()) {\n      const tree = shouldDive(received) ? received.dive() : received;\n      const components = tree.findWhere(isTagWithClassName);\n      if (components.length) {\n        className = components.first().prop('className');\n      }\n    } else if (global.Element && received instanceof global.Element) {\n      className = Array.from(received.classList).join(' ');\n    }\n  }\n\n  return className ? className.split(/\\s/) : [];\n};\n\nconst hasAtRule = options => Object.keys(options).some(option => ['media', 'supports'].includes(option));\n\nconst getAtRules = (ast, options) => {\n  const mediaRegex = /(\\([a-z-]+:)\\s?([a-z0-9.]+\\))/g;\n\n  return Object.keys(options)\n    .map(option =>\n      ast.stylesheet.rules\n        .filter(rule => rule.type === option && rule[option] === options[option].replace(mediaRegex, '$1$2'))\n        .map(rule => rule.rules)\n        .reduce((acc, rules) => acc.concat(rules), [])\n    )\n    .reduce((acc, rules) => acc.concat(rules), []);\n};\n\nconst getModifiedClassName = (className, modifier = '') => {\n  const classNameSelector = `.${className}`;\n  let prefix = '';\n\n  modifier = modifier.trim();\n  if (modifier.includes('&')) {\n    modifier = modifier.replace(/&/g, classNameSelector);\n  } else {\n    prefix += classNameSelector;\n  }\n  const first = modifier[0];\n  if (first !== ':' && first !== '[') {\n    prefix += ' ';\n  }\n\n  return `${prefix}${modifier}`.trim();\n};\n\nconst hasClassNames = (classNames, selectors, options) =>\n  classNames.some(className => selectors.includes(getModifiedClassName(className, options.modifier)));\n\nconst getRules = (ast, classNames, options) => {\n  const rules = hasAtRule(options) ? getAtRules(ast, options) : ast.stylesheet.rules;\n\n  return rules.filter(rule => rule.type === 'rule' && hasClassNames(classNames, rule.selectors, options));\n};\n\nconst handleMissingRules = options => ({\n  pass: false,\n  message: () =>\n    `No style rules found on passed Component${\n      Object.keys(options).length ? ` using options:\\n${JSON.stringify(options)}` : ''\n    }`,\n});\n\nconst getDeclaration = (rule, property) =>\n  rule.declarations\n    .filter(declaration => declaration.type === 'declaration' && declaration.property === property)\n    .pop();\n\nconst getDeclarations = (rules, property) => rules.map(rule => getDeclaration(rule, property)).filter(Boolean);\n\nconst normalizeOptions = options =>\n  options.modifier\n    ? Object.assign({}, options, {\n        modifier: Array.isArray(options.modifier) ? options.modifier.join('') : options.modifier,\n      })\n    : options;\n\nfunction toHaveStyleRule(component, property, expected, options = {}) {\n  const classNames = getClassNames(component);\n  const ast = getCSS();\n  const normalizedOptions = normalizeOptions(options);\n  const rules = getRules(ast, classNames, normalizedOptions);\n\n  if (!rules.length) {\n    return handleMissingRules(normalizedOptions);\n  }\n\n  const declarations = getDeclarations(rules, property);\n  const declaration = declarations.pop() || {};\n  const received = declaration.value;\n  const pass = !received && !expected && this.isNot ? false : matcherTest(received, expected);\n\n  return {\n    pass,\n    message: buildReturnMessage(this.utils, pass, property, received, expected),\n  };\n}\n\nmodule.exports = toHaveStyleRule;\n"]}