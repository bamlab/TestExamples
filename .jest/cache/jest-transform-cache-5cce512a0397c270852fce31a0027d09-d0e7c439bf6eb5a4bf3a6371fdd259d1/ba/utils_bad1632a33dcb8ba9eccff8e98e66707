3aacf2b14b293eeba08ad0143b54e4e0
var css = require('css');

var _require = require('styled-components'),
    ServerStyleSheet = _require.ServerStyleSheet,
    isStyledComponent = _require.isStyledComponent;

var StyleSheet;

if (isStyledComponent) {
  var secretInternals = require('styled-components').__DO_NOT_USE_OR_YOU_WILL_BE_HAUNTED_BY_SPOOKY_GHOSTS;

  if (secretInternals === undefined || secretInternals.StyleSheet === undefined) {
    throw new Error('Could neither find styled-components secret internals nor styled-components/lib/models/StyleSheet.js');
  } else {
    StyleSheet = secretInternals.StyleSheet;
  }
} else {
  StyleSheet = require('styled-components/lib/models/StyleSheet').default;
}

var isServer = function isServer() {
  return typeof document === 'undefined';
};

var resetStyleSheet = function resetStyleSheet() {
  return StyleSheet.reset(isServer());
};

var getHTML = function getHTML() {
  return isServer() ? new ServerStyleSheet().getStyleTags() : StyleSheet.instance.toHTML();
};

var extract = function extract(regex) {
  var style = '';
  var matches;

  while ((matches = regex.exec(getHTML())) !== null) {
    style += matches[1] + " ";
  }

  return style.trim();
};

var getStyle = function getStyle() {
  return extract(/<style[^>]*>([^<]*)</g);
};

var getCSS = function getCSS() {
  return css.parse(getStyle());
};

var getClassNames = function getClassNames() {
  return extract(/data-styled(?:-components)?="([^"]*)"/g).split(/\s/);
};

var getComponentIDs = function getComponentIDs() {
  return extract(/sc-component-id: ([^\\*\\/]*) \*\//g).split(/\s/);
};

var getHashes = function getHashes() {
  return getClassNames().concat(getComponentIDs()).filter(Boolean);
};

var buildReturnMessage = function buildReturnMessage(utils, pass, property, received, expected) {
  return function () {
    return utils.printReceived(!received && !pass ? "Property '" + property + "' not found in style rules" : "Value mismatch for property '" + property + "'") + "\n\n" + 'Expected\n' + ("  " + utils.printExpected(property + ": " + expected) + "\n") + 'Received:\n' + ("  " + utils.printReceived(property + ": " + received));
  };
};

var matcherTest = function matcherTest(received, expected) {
  try {
    var matcher = expected instanceof RegExp ? expect.stringMatching(expected) : expected;
    expect(received).toEqual(matcher);
    return true;
  } catch (error) {
    return false;
  }
};

module.exports = {
  resetStyleSheet: resetStyleSheet,
  getCSS: getCSS,
  getHashes: getHashes,
  buildReturnMessage: buildReturnMessage,
  matcherTest: matcherTest
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInV0aWxzLmpzIl0sIm5hbWVzIjpbImNzcyIsInJlcXVpcmUiLCJTZXJ2ZXJTdHlsZVNoZWV0IiwiaXNTdHlsZWRDb21wb25lbnQiLCJTdHlsZVNoZWV0Iiwic2VjcmV0SW50ZXJuYWxzIiwiX19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0hBVU5URURfQllfU1BPT0tZX0dIT1NUUyIsInVuZGVmaW5lZCIsIkVycm9yIiwiZGVmYXVsdCIsImlzU2VydmVyIiwiZG9jdW1lbnQiLCJyZXNldFN0eWxlU2hlZXQiLCJyZXNldCIsImdldEhUTUwiLCJnZXRTdHlsZVRhZ3MiLCJpbnN0YW5jZSIsInRvSFRNTCIsImV4dHJhY3QiLCJyZWdleCIsInN0eWxlIiwibWF0Y2hlcyIsImV4ZWMiLCJ0cmltIiwiZ2V0U3R5bGUiLCJnZXRDU1MiLCJwYXJzZSIsImdldENsYXNzTmFtZXMiLCJzcGxpdCIsImdldENvbXBvbmVudElEcyIsImdldEhhc2hlcyIsImNvbmNhdCIsImZpbHRlciIsIkJvb2xlYW4iLCJidWlsZFJldHVybk1lc3NhZ2UiLCJ1dGlscyIsInBhc3MiLCJwcm9wZXJ0eSIsInJlY2VpdmVkIiwiZXhwZWN0ZWQiLCJwcmludFJlY2VpdmVkIiwicHJpbnRFeHBlY3RlZCIsIm1hdGNoZXJUZXN0IiwibWF0Y2hlciIsIlJlZ0V4cCIsImV4cGVjdCIsInN0cmluZ01hdGNoaW5nIiwidG9FcXVhbCIsImVycm9yIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsSUFBTUEsR0FBRyxHQUFHQyxPQUFPLENBQUMsS0FBRCxDQUFuQjs7ZUFDZ0RBLE9BQU8sQ0FBQyxtQkFBRCxDO0lBQS9DQyxnQixZQUFBQSxnQjtJQUFrQkMsaUIsWUFBQUEsaUI7O0FBRTFCLElBQUlDLFVBQUo7O0FBRUEsSUFBSUQsaUJBQUosRUFBdUI7QUFDckIsTUFBTUUsZUFBZSxHQUFHSixPQUFPLENBQUMsbUJBQUQsQ0FBUCxDQUNyQkssb0RBREg7O0FBR0EsTUFDRUQsZUFB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Q0FBQ0MsY0FBUCxDQUFzQlAsUUFBdEIsQ0FBN0IsR0FBK0RBLFFBRGpFO0FBR0FNLElBQUFBLE1BQU0sQ0FBQ1AsUUFBRCxDQUFOLENBQWlCUyxPQUFqQixDQUF5QkosT0FBekI7QUFDQSxXQUFPLElBQVA7QUFDRCxHQU5ELENBTUUsT0FBT0ssS0FBUCxFQUFjO0FBQ2QsV0FBTyxLQUFQO0FBQ0Q7QUFDRixDQVZEOztBQVlBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUI7QUFDZnRDLEVBQUFBLGVBQWUsRUFBZkEsZUFEZTtBQUVmYSxFQUFBQSxNQUFNLEVBQU5BLE1BRmU7QUFHZkssRUFBQUEsU0FBUyxFQUFUQSxTQUhlO0FBSWZJLEVBQUFBLGtCQUFrQixFQUFsQkEsa0JBSmU7QUFLZlEsRUFBQUEsV0FBVyxFQUFYQTtBQUxlLENBQWpCIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgY3NzID0gcmVxdWlyZSgnY3NzJylcbmNvbnN0IHsgU2VydmVyU3R5bGVTaGVldCwgaXNTdHlsZWRDb21wb25lbnQgfSA9IHJlcXVpcmUoJ3N0eWxlZC1jb21wb25lbnRzJylcblxubGV0IFN0eWxlU2hlZXRcblxuaWYgKGlzU3R5bGVkQ29tcG9uZW50KSB7XG4gIGNvbnN0IHNlY3JldEludGVybmFscyA9IHJlcXVpcmUoJ3N0eWxlZC1jb21wb25lbnRzJylcbiAgICAuX19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0hBVU5URURfQllfU1BPT0tZX0dIT1NUU1xuXG4gIGlmIChcbiAgICBzZWNyZXRJbnRlcm5hbHMgPT09IHVuZGVmaW5lZCB8fFxuICAgIHNlY3JldEludGVybmFscy5TdHlsZVNoZWV0ID09PSB1bmRlZmluZWRcbiAgKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgJ0NvdWxkIG5laXRoZXIgZmluZCBzdHlsZWQtY29tcG9uZW50cyBzZWNyZXQgaW50ZXJuYWxzIG5vciBzdHlsZWQtY29tcG9uZW50cy9saWIvbW9kZWxzL1N0eWxlU2hlZXQuanMnXG4gICAgKVxuICB9IGVsc2Uge1xuICAgIFN0eWxlU2hlZXQgPSBzZWNyZXRJbnRlcm5hbHMuU3R5bGVTaGVldFxuICB9XG59IGVsc2Uge1xuICBTdHlsZVNoZWV0ID0gcmVxdWlyZSgnc3R5bGVkLWNvbXBvbmVudHMvbGliL21vZGVscy9TdHlsZVNoZWV0JykuZGVmYXVsdCAvLyBlc2xpbnQtZGlzYWJsZS1saW5lXG59XG5cbmNvbnN0IGlzU2VydmVyID0gKCkgPT4gdHlwZW9mIGRvY3VtZW50ID09PSAndW5kZWZpbmVkJ1xuXG5jb25zdCByZXNldFN0eWxlU2hlZXQgPSAoKSA9PiBTdHlsZVNoZWV0LnJlc2V0KGlzU2VydmVyKCkpXG5cbmNvbnN0IGdldEhUTUwgPSAoKSA9PlxuICBpc1NlcnZlcigpXG4gICAgPyBuZXcgU2VydmVyU3R5bGVTaGVldCgpLmdldFN0eWxlVGFncygpXG4gICAgOiBTdHlsZVNoZWV0Lmluc3RhbmNlLnRvSFRNTCgpXG5cbmNvbnN0IGV4dHJhY3QgPSByZWdleCA9PiB7XG4gIGxldCBzdHlsZSA9ICcnXG4gIGxldCBtYXRjaGVzXG5cbiAgd2hpbGUgKChtYXRjaGVzID0gcmVnZXguZXhlYyhnZXRIVE1MKCkpKSAhPT0gbnVsbCkge1xuICAgIHN0eWxlICs9IGAke21hdGNoZXNbMV19IGBcbiAgfVxuXG4gIHJldHVybiBzdHlsZS50cmltKClcbn1cblxuY29uc3QgZ2V0U3R5bGUgPSAoKSA9PiBleHRyYWN0KC88c3R5bGVbXj5dKj4oW148XSopPC9nKVxuXG5jb25zdCBnZXRDU1MgPSAoKSA9PiBjc3MucGFyc2UoZ2V0U3R5bGUoKSlcblxuY29uc3QgZ2V0Q2xhc3NOYW1lcyA9ICgpID0+XG4gIGV4dHJhY3QoL2RhdGEtc3R5bGVkKD86LWNvbXBvbmVudHMpPz1cIihbXlwiXSopXCIvZykuc3BsaXQoL1xccy8pXG5cbmNvbnN0IGdldENvbXBvbmVudElEcyA9ICgpID0+XG4gIGV4dHJhY3QoL3NjLWNvbXBvbmVudC1pZDogKFteXFxcXCpcXFxcL10qKSBcXCpcXC8vZykuc3BsaXQoL1xccy8pXG5cbmNvbnN0IGdldEhhc2hlcyA9ICgpID0+XG4gIGdldENsYXNzTmFtZXMoKVxuICAgIC5jb25jYXQoZ2V0Q29tcG9uZW50SURzKCkpXG4gICAgLmZpbHRlcihCb29sZWFuKVxuXG5jb25zdCBidWlsZFJldHVybk1lc3NhZ2UgPSAodXRpbHMsIHBhc3MsIHByb3BlcnR5LCByZWNlaXZlZCwgZXhwZWN0ZWQpID0+ICgpID0+XG4gIGAke3V0aWxzLnByaW50UmVjZWl2ZWQoXG4gICAgIXJlY2VpdmVkICYmICFwYXNzXG4gICAgICA/IGBQcm9wZXJ0eSAnJHtwcm9wZXJ0eX0nIG5vdCBmb3VuZCBpbiBzdHlsZSBydWxlc2BcbiAgICAgIDogYFZhbHVlIG1pc21hdGNoIGZvciBwcm9wZXJ0eSAnJHtwcm9wZXJ0eX0nYFxuICApfVxcblxcbmAgK1xuICAnRXhwZWN0ZWRcXG4nICtcbiAgYCAgJHt1dGlscy5wcmludEV4cGVjdGVkKGAke3Byb3BlcnR5fTogJHtleHBlY3RlZH1gKX1cXG5gICtcbiAgJ1JlY2VpdmVkOlxcbicgK1xuICBgICAke3V0aWxzLnByaW50UmVjZWl2ZWQoYCR7cHJvcGVydHl9OiAke3JlY2VpdmVkfWApfWBcblxuY29uc3QgbWF0Y2hlclRlc3QgPSAocmVjZWl2ZWQsIGV4cGVjdGVkKSA9PiB7XG4gIHRyeSB7XG4gICAgY29uc3QgbWF0Y2hlciA9XG4gICAgICBleHBlY3RlZCBpbnN0YW5jZW9mIFJlZ0V4cCA/IGV4cGVjdC5zdHJpbmdNYXRjaGluZyhleHBlY3RlZCkgOiBleHBlY3RlZFxuXG4gICAgZXhwZWN0KHJlY2VpdmVkKS50b0VxdWFsKG1hdGNoZXIpXG4gICAgcmV0dXJuIHRydWVcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICByZXR1cm4gZmFsc2VcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgcmVzZXRTdHlsZVNoZWV0LFxuICBnZXRDU1MsXG4gIGdldEhhc2hlcyxcbiAgYnVpbGRSZXR1cm5NZXNzYWdlLFxuICBtYXRjaGVyVGVzdCxcbn1cbiJdfQ==